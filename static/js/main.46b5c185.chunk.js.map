{"version":3,"sources":["components/Post.js","redux/actions/types.js","api/index.js","images/Loading.gif","components/Loader.js","components/PostsList.js","redux/actions/post.js","components/EditPostForm.js","components/PostDetails.js","images/Logo.js","components/AddPostForm.js","components/NavHoverBox.js","components/NavItem.js","components/Sidebar.js","components/Header.js","components/Home.js","App.js","redux/reducers/post.js","redux/store/index.js","redux/reducers/category.js","index.js"],"names":["Post","date","post","category","roundedTop","w","h","fit","src","image","alt","tag","p","span","fontSize","textTransform","color","useColorModeValue","cursor","display","fontWeight","_hover","textDecor","href","_id","title","mt","fontStyle","subtitle","content","substring","alignItems","justify","rounded","mx","author","createdAt","moment","fromNow","FETCH_POSTS_REQUEST","FETCH_POSTS_SUCCESS","FETCH_POSTS_FAIL","FETCH_SINGLE_POST_REQUEST","FETCH_SINGLE_POST_SUCCESS","FETCH_SINGLE_POST_FAIL","CREATE_POST_REQUEST","CREATE_POST_SUCCESS","CREATE_POST_FAIL","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAIL","DELETE_POST_REQUEST","DELETE_POST_SUCCESS","DELETE_POST_FAIL","API_ENDPOINT","fetchPosts","a","axios","get","fetchSinglePost","id","createPost","updatePost","updatedPost","patch","deletePost","delete","Loader","className","Loading","PostsList","listPost","useSelector","state","posts","loading","error","useParams","dispatch","useDispatch","useEffect","type","types","api","data","payload","message","bg","textAlign","pt","bgGradient","bgClip","as","FiBook","px","py","align","minH","spacing","length","findIndex","item","map","shadow","maxW","boxShadow","EditPostForm","closeEditMode","categories","useState","file","setFile","useForm","register","errors","control","handleSubmit","borderRadius","my","noValidate","autoComplete","onSubmit","toast","success","isInvalid","label","name","ref","required","value","defaultValue","placeholder","i","minLength","multiple","onDone","base64","justifyContent","colorScheme","mr","onClick","PostDetails","history","useHistory","currentPosts","currentPost","editMode","setEditMode","size","direction","format","Edit","window","confirm","setTimeout","push","Delete","style","marginBottom","isReadOnly","variant","resize","overflow","ResizeTextarea","replace","SvgLogo","AddPostForm","isOpen","onClose","clearForm","pb","pr","NavHoverBox","icon","description","pos","ml","width","height","borderTop","borderBottom","borderRight","flexDir","bgColor","NavItem","navSize","path","active","placement","textDector","fontFamily","border","Sidebar","changeNavSize","FiHome","FiChevronsRight","BiBaseball","FiSettings","Header","useDisclosure","onOpen","header","m","CallToActionWithAnnotation","Box","base","md","sm","lineHeight","App","autoClose","basename","exact","component","Home","to","initialState","rootReducer","combineReducers","action","filter","baseball","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","theme","extendTheme","colors","brand","config","initialColorMode","useSystemColorMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46b5c185.chunk.js","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/en-gb';\nimport { Image, chakra, useColorModeValue, Link, Box, Flex, Spacer } from '@chakra-ui/react';\n\nconst Post = ({ post, category }) => {\n  const convertRelativeTime = date => {\n    return moment(date).fromNow();\n  };\n\n  return (\n    <>\n      <Image\n        roundedTop=\"lg\"\n        w=\"full\"\n        h={64}\n        fit=\"cover\"\n        src={post?.image || 'https://loremflickr.com/448/256'}\n        alt={post?.tag}\n      />\n\n      <Box p={6}>\n        <Box>\n          <chakra.span\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            color={useColorModeValue('brand.600', 'brand.300')}\n            cursor=\"pointer\"\n          >\n            {post.tag}\n          </chakra.span>\n\n          <Link\n            display=\"block\"\n            color={useColorModeValue('gray.800', 'white')}\n            fontWeight=\"bold\"\n            fontSize=\"2xl\"\n            _hover={{ color: 'gray.500', textDecor: 'underline' }}\n            href={category != null ? `${post.tag}/${post._id}` : `posts/${post.tag}/${post._id}`}\n          >\n            {post.title}\n          </Link>\n          <chakra.span mt={2} fontSize=\"sm\" fontStyle=\"italic\" color={useColorModeValue('gray.500', 'gray.500')}>\n            {post.subtitle}\n          </chakra.span>\n          <chakra.p mt={4} fontSize=\"sm\" color={useColorModeValue('gray.400', 'gray.400')}>\n            {post.content.substring(0, 225) + '...'}\n          </chakra.p>\n        </Box>\n\n        <Box mt={4}>\n          <Flex alignItems=\"center\">\n            <Flex alignItems=\"center\" justify=\"between\">\n              <Image h={10} fit=\"cover\" rounded=\"full\" src=\"https://source.unsplash.com/random/48x48\" alt=\"Avatar\" />\n              <Link mx={2} fontWeight=\"bold\" color={useColorModeValue('gray.700', 'gray.200')}>\n                {post.author}\n              </Link>\n            </Flex>\n            <Spacer />\n            <chakra.span mx={1} fontSize=\"sm\" color={useColorModeValue('gray.600', 'gray.300')}>\n              {convertRelativeTime(post.createdAt)}\n            </chakra.span>\n          </Flex>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default Post;\n","export const FETCH_POSTS_REQUEST = 'FETCH_POSTS_LOADING';\nexport const FETCH_POSTS_SUCCESS = 'FETCH_POSTS_SUCCESS';\nexport const FETCH_POSTS_FAIL = 'FETCH_POSTS_FAIL';\n\nexport const FETCH_SINGLE_POST_REQUEST = 'FETCH_SINGLE_POST_REQUEST';\nexport const FETCH_SINGLE_POST_SUCCESS = 'FETCH_SINGLE_POST_SUCCESS';\nexport const FETCH_SINGLE_POST_FAIL = 'FETCH_SINGLE_POST_FAIL';\n\nexport const CREATE_POST_REQUEST = 'CREATE_POST_REQUEST';\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\nexport const CREATE_POST_FAIL = 'CREATE_POST_FAIL';\n\nexport const UPDATE_POST_REQUEST = 'UPDATE_POST_REQUEST';\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport const UPDATE_POST_FAIL = 'UPDATE_POST_FAIL';\n\nexport const DELETE_POST_REQUEST = 'DELETE_POST_REQUEST';\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\nexport const DELETE_POST_FAIL = 'DELETE_POST_FAIL';\n","import axios from 'axios';\n\nconst API_ENDPOINT = 'http://localhost:9500/posts';\n\nexport const fetchPosts = async () => {\n  return await axios.get(API_ENDPOINT);\n};\n\nexport const fetchSinglePost = async id => {\n  return await axios.get(`${API_ENDPOINT}/${id}`);\n};\n\nexport const createPost = async post => {\n  return await axios.post(API_ENDPOINT, post);\n};\n\nexport const updatePost = async (id, updatedPost) => {\n  return await axios.patch(`${API_ENDPOINT}/${id}`, updatedPost);\n};\n\nexport const deletePost = async id => {\n  return await axios.delete(`${API_ENDPOINT}/${id}`);\n};\n","export default __webpack_public_path__ + \"static/media/Loading.709feba7.gif\";","import React from 'react';\nimport Loading from '../images/Loading.gif';\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <figure>\n        <img src={Loading} alt=\"cute loader\" />\n      </figure>\n    </div>\n  );\n};\n\nexport default Loader;\n","/* eslint-disable */\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Post from './Post';\nimport { fetchPosts} from '../redux/actions/post';\nimport Loader from './Loader';\nimport { useColorModeValue, Box, Wrap, Flex, Text, Icon, Stack } from '@chakra-ui/react';\nimport { useParams } from 'react-router';\nimport {FiBook} from 'react-icons/fi';\n\nconst PostsList = () => {\n  const listPost = useSelector(state => state.posts);\n  const { posts, loading, error } = listPost;\n  const { category } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  return (\n    <>\n    <Stack bg={useColorModeValue('#F9FAFB', 'gray.600')} textAlign={'center'} >\n      <Text pt={10} fontSize=\"4xl\" bgGradient=\"linear(to-r, blue.300 0%, blue.200 50%, gray.100 100%)\" bgClip=\"text\" fontWeight={600}>\n        <Icon as={FiBook} color=\"blue.300\" />  {category != null ?category: 'ALL'}\n      </Text>\n    </Stack>\n    <Flex\n      bg={useColorModeValue('#F9FAFB', 'gray.600')}\n      px={5}\n      py={30}\n      w=\"full\"\n      align=\"center\"\n      justify=\"center\"\n      minH=\"100vh\"\n    >\n      <Wrap spacing=\"30px\" justify=\"center\">\n        {error && <p>{error}</p>}\n        {loading ? (\n          <Loader />\n        ) : posts?.length > 0 && (category == null || posts.findIndex((item) => item.tag == category) > -1) ? (\n          posts?.map(post => (\n            (category == null || post.tag == category) ? (\n            <Box\n              mx=\"auto\"\n              rounded=\"lg\"\n              shadow=\"md\"\n              bg={('white', 'gray.800')}\n              maxW=\"md\"\n              key={post?._id}\n              boxShadow=\"dark-lg\"\n            >\n              <Post post={post} category={category}/>\n            </Box>\n            ) :  (<></>)\n          ))\n        ) : (\n          'Blog not found!'\n        )}\n      </Wrap>\n    </Flex>\n    </>\n  );\n};\n\nexport default PostsList;\n","import * as types from './types';\nimport * as api from '../../api';\n\nexport const fetchPosts = () => async dispatch => {\n  try {\n    dispatch({ type: types.FETCH_POSTS_REQUEST });\n    const { data } = await api.fetchPosts();\n    dispatch({ type: types.FETCH_POSTS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: types.FETCH_POSTS_FAIL, payload: error.message });\n  }\n};\n\nexport const fetchSinglePost = id => async dispatch => {\n  try {\n    dispatch({ type: types.FETCH_SINGLE_POST_REQUEST });\n    const { data } = await api.fetchSinglePost(id);\n    dispatch({ type: types.FETCH_SINGLE_POST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: types.FETCH_SINGLE_POST_FAIL, payload: error.message });\n  }\n};\n\nexport const createPost = post => async dispatch => {\n  try {\n    dispatch({ type: types.CREATE_POST_REQUEST, payload: post });\n    const { data } = await api.createPost(post);\n    dispatch({\n      type: types.CREATE_POST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({ type: types.CREATE_POST_FAIL, payload: error.message });\n  }\n};\n\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    dispatch({ type: types.UPDATE_POST_REQUEST });\n    const { data } = await api.updatePost(id, post);\n    dispatch({\n      type: types.UPDATE_POST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({ type: types.UPDATE_POST_FAIL, payload: error.message });\n  }\n};\n\nexport const deletePost = id => async dispatch => {\n  try {\n    dispatch({ type: types.DELETE_POST_REQUEST });\n    const { data } = await api.deletePost(id);\n    dispatch({\n      type: types.DELETE_POST_SUCCESS,\n      payload: data._id,\n    });\n  } catch (error) {\n    dispatch({ type: types.DELETE_POST_FAIL, payload: error.message });\n  }\n};\n","import React, { useState } from 'react';\nimport FileBase64 from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { useForm, Controller } from 'react-hook-form';\nimport { updatePost } from '../redux/actions/post';\nimport { Textarea, Box, Flex, Heading, Select } from '@chakra-ui/react';\nimport { FormControl, FormLabel } from '@chakra-ui/form-control';\nimport { Button } from '@chakra-ui/button';\nimport { Input } from '@chakra-ui/input';\n\n\nconst EditPostForm = ({ post, closeEditMode }) => {\n  \n  const categories = useSelector(state => state.category);\n  const [file, setFile] = useState(post?.image);\n  const { register, errors, control, handleSubmit } = useForm();\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    try {\n      const updatedPost = {\n        _id: post._id,\n        ...data,\n        image: file,\n      };\n      dispatch(updatePost(post._id, updatedPost));\n      toast.success('Blog successfully updated!');\n      setFile(null);\n      closeEditMode();\n    } catch (error) {\n      toast.error(error);\n    }\n  };\n\n  return (\n    <Flex maxW=\"900px\" px={5} mx=\"auto\" align=\"center\" justify=\"center\" minH={'90vh'}>\n      <Box w=\"100%\" px={10} py={5} bg={('white', 'gray.700')} borderRadius=\"lg\" boxShadow=\"dark-lg\">\n        <Box textAlign=\"center\">\n          <Heading as=\"h2\">Edit Post </Heading>\n        </Box>\n        <Box my={4} textAlign=\"left\">\n          <form noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n            <FormControl isInvalid={errors.title} minH={'100px'}>\n              <FormLabel>Title</FormLabel>\n              <Input\n                id=\"title\"\n                label=\"Başlık\"\n                name=\"title\"\n                ref={register({\n                  required: {\n                    value: true,\n                    message: 'This field is required.',\n                  },\n                })}\n                defaultValue={post?.title}\n              />\n              {errors.title && <p className=\"validation__error\">{errors.title.message}</p>}\n            </FormControl>\n\n            <FormControl isInvalid={errors.subtitle} minH={'100px'}>\n              <FormLabel>Subtitle</FormLabel>\n              <Input\n                id=\"subtitle\"\n                label=\"Alt Başlık\"\n                name=\"subtitle\"\n                ref={register({\n                  required: {\n                    value: true,\n                    message: 'This field is required.',\n                  },\n                })}\n                defaultValue={post?.subtitle}\n              />\n              {errors.subtitle && <p className=\"validation__error\">{errors.subtitle.message}</p>}\n            </FormControl>\n\n            <FormControl isInvalid={errors.author} minH={'100px'}>\n              <FormLabel>Author</FormLabel>\n              <Input\n                id=\"author\"\n                label=\"Author\"\n                name=\"author\"\n                ref={register({\n                  required: {\n                    value: true,\n                    message: 'This field is required.',\n                  },\n                })}\n                defaultValue={post?.author}\n              />\n              {errors.author && <p className=\"validation__error\">{errors.author.message}</p>}\n            </FormControl>\n\n            <FormControl minH={'100px'}>\n              <FormLabel>Category</FormLabel>\n              <Controller\n                as={\n                  <Select placeholder=\"Choose Category\">\n                    {categories.category.post.map((category, i) => (\n                      <option key={i} value={category}>\n                        {category}\n                      </option>\n                    ))}\n                  </Select>\n                }\n                name=\"tag\"\n                control={control}\n                defaultValue={post?.tag}\n              />\n            </FormControl>\n\n            <FormControl isInvalid={errors.content} minH={'100px'}>\n              <FormLabel>Content</FormLabel>\n              <Textarea\n                id=\"content\"\n                label=\"İçerik\"\n                name=\"content\"\n                ref={register({\n                  required: {\n                    value: true,\n                    message: 'This field is required.',\n                  },\n                  minLength: {\n                    message: 'Content must contain at least 50 characters or more.',\n                    value: 50,\n                  },\n                })}\n                defaultValue={post?.content}\n              />\n              {errors.content && <p className=\"validation__error\">{errors.content.message}</p>}\n            </FormControl>\n\n            <FormControl mt={4}>\n              <FileBase64 multiple={false} onDone={({ base64 }) => setFile(base64)} />\n            </FormControl>\n\n            <Box mt={4} display=\"flex\" alignItems=\"center\" justifyContent=\"flex-end\">\n              <Button colorScheme=\"blue\" mr={3} type=\"submit\">\n                Update\n              </Button>\n              <Button onClick={closeEditMode}>Cancel</Button>\n            </Box>\n          </form>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default EditPostForm;\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchSinglePost, deletePost } from '../redux/actions/post';\nimport { useParams } from 'react-router';\nimport { useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport EditPostForm from './EditPostForm';\nimport Loader from './Loader';\nimport { Flex, Box, Image, chakra, Spacer, Link, Button, Heading, Text, Textarea } from '@chakra-ui/react';\nimport { EditIcon, DeleteIcon } from '@chakra-ui/icons';\nimport ResizeTextarea from 'react-textarea-autosize';\n\nconst PostDetails = () => {\n  const { id } = useParams();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const currentPosts = useSelector(state => state.posts);\n  const { currentPost, loading, error } = currentPosts;\n  const [editMode, setEditMode] = useState(false);\n\n  const openEditMode = () => {\n    setEditMode(true);\n  };\n\n  const closeEditMode = () => {\n    setEditMode(false);\n  };\n\n  const convertRelativeTime = date => {\n    return moment(date).format('LL');\n  };\n\n  useEffect(() => {\n    dispatch(fetchSinglePost(id));\n  }, [dispatch, id]);\n\n  const removePost = () => {\n    try {\n      if (window.confirm(`Are you sure? You can't undo this action afterwards.`)) {\n        dispatch(deletePost(currentPost?._id));\n        toast.success('Blog successfully removed!');\n        setTimeout(() => {\n          history.push('/posts');\n        }, 500);\n      }\n    } catch (error) {\n      toast.error(error);\n    }\n  };\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <div>\n          {error && <p>{error}</p>}\n          {editMode ? (\n            <EditPostForm post={currentPost} closeEditMode={closeEditMode} />\n          ) : (\n            <Flex maxW=\"900px\" mx=\"auto\" align=\"center\" justify=\"center\" px={5}>\n              <Box w=\"100%\" py={5}>\n                <Box py={6}>\n                  <Heading as=\"h1\" size=\"xl\" color={('gray.600', 'gray.100')}>\n                    {currentPost?.title}\n                  </Heading>\n                  <Heading\n                    as=\"h2\"\n                    fontWeight=\"normal\"\n                    size=\"sm\"\n                    mt={2}\n                    fontStyle=\"italic\"\n                    color={('gray.600', 'gray.400')}\n                  >\n                    {currentPost?.subtitle}\n                  </Heading>\n\n                  <Box my={6}>\n                    <Flex align=\"center\">\n                      <Flex align=\"center\" justify=\"between\">\n                        <Image\n                          h={10}\n                          fit=\"cover\"\n                          rounded=\"full\"\n                          src=\"https://source.unsplash.com/random/48x48\"\n                          alt=\"Avatar\"\n                        />\n                        <Flex align=\"flex-start\" direction=\"column\">\n                          <Link mx={3} fontWeight=\"bold\" color={('blue.600', 'brand.200')}>\n                            {currentPost?.author}\n                          </Link>\n                          <chakra.span mx={3} fontSize=\"sm\" color={('gray.600', 'whiteAlpha.600')}>\n                            {convertRelativeTime(currentPost?.createdAt)}\n                          </chakra.span>\n                        </Flex>\n                      </Flex>\n\n                      <Spacer />\n\n                      <Button colorScheme=\"blue\" mr={3} onClick={openEditMode}>\n                        <EditIcon />\n                      </Button>\n                      <Button onClick={removePost} colorScheme=\"red\">\n                        <DeleteIcon />\n                      </Button>\n                    </Flex>\n                  </Box>\n\n                  <figure style={{ marginBottom: '2rem' }}>\n                    <Image\n                      w=\"100%\"\n                      borderRadius=\"md\"\n                      src={currentPost?.image || 'https://loremflickr.com/1280/720'}\n                      alt={currentPost?.tag}\n                    />\n                  </figure>\n                  <Textarea\n                    mt={4}\n                    fontSize=\"lg\"\n                    color={('gray.400', 'gray.300')}\n                    isReadOnly=\"true\"\n                    variant=\"unstyled\"\n                    resize={'none'}\n                    overflow=\"hidden\"\n                    as={ResizeTextarea}\n                  >\n                    {currentPost?.content.replace()}\n                  </Textarea>\n                </Box>\n              </Box>\n            </Flex>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default PostDetails;\n","import * as React from 'react';\n\nfunction SvgLogo(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width={64} height={64} {...props}>\n      <path fill=\"#faefde\" d=\"M32 18.55A18 18 0 1129.41 40\" />\n      <path fill=\"#f9e3ae\" d=\"M45 44a13 13 0 1113-13 13 13 0 01-13 13z\" />\n      <path fill=\"#ed7899\" d=\"M19 13a18 18 0 100 36 18 18 0 100-36z\" />\n      <path fill=\"#f283a5\" d=\"M19 13a18 18 0 100 36 18 18 0 100-36z\" />\n      <path fill=\"#ed7899\" d=\"M19 44a13 13 0 1113-13 13 13 0 01-13 13z\" />\n      <path\n        fill=\"#8d6c9f\"\n        d=\"M28 32a1 1 0 000-2h-2a1 1 0 000 2zm1.54 3.14a1 1 0 00-1.22-.71l-1.93.57a1 1 0 10.52 1.93l1.93-.52a1 1 0 00.7-1.27zM26.39 27l1.93.52a1 1 0 10.52-1.93l-1.93-.52a1 1 0 10-.52 1.93zM28 22.37l1.73 1a1 1 0 00.5.13 1 1 0 00.5-1.87l-1.73-1a1 1 0 10-1 1.73zm26.42-1.72a1 1 0 00-1.35 1.48 12 12 0 011.41 1.53 1 1 0 001.58-1.22 14.07 14.07 0 00-1.64-1.79zm-3.92-2.53a14.12 14.12 0 00-9.58-.52 1 1 0 10.58 1.91 12.11 12.11 0 018.21.44 1 1 0 10.79-1.84z\"\n      />\n      <path\n        fill=\"#8d6c9f\"\n        d=\"M45 12a18.81 18.81 0 00-13 5.18 19 19 0 100 27.65A19 19 0 1045 12zM2 31a17 17 0 1130 10.94 16.91 16.91 0 01-1.72-2.43 1 1 0 10-1.73 1 18.89 18.89 0 002.06 2.88A17 17 0 012 31zm43 17a17.05 17.05 0 01-11.62-4.61 18.9 18.9 0 000-24.77A16.82 16.82 0 0145 14a17 17 0 010 34z\"\n      />\n    </svg>\n  );\n}\n\nexport default SvgLogo;\n","import React, { useState } from 'react';\nimport FileBase64 from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { useForm, Controller } from 'react-hook-form';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Textarea,\n  Select,\n} from '@chakra-ui/react';\nimport { Button } from '@chakra-ui/button';\nimport { Input } from '@chakra-ui/input';\nimport { FormControl, FormLabel } from '@chakra-ui/form-control';\n\nimport { createPost } from '../redux/actions/post';\n\nconst AddPostForm = ({ isOpen, onClose }) => {\n  \n  const categories = useSelector(state => state.category);\n  const [file, setFile] = useState(null);\n\n  const { register, errors, control, handleSubmit } = useForm();\n\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    try {\n      dispatch(createPost({ ...data, image: file }));\n      toast.success('Blog successfully added!');\n      clearForm();\n    } catch (error) {\n      toast.error(error);\n    }\n  };\n\n  const clearForm = () => {\n    onClose();\n    setFile(null);\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Add New Post</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody pb={6}>\n          <form noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n            <FormControl isInvalid={errors.title} minH={'100px'}>\n              <FormLabel>Title</FormLabel>\n              <Input\n                id=\"title\"\n                label=\"Başlık\"\n                name=\"title\"\n                ref={register({\n                  required: {\n                    value: true,\n                    message: 'This field is required.',\n                  },\n                })}\n              />\n              {errors.title && <p className=\"validation__error\">{errors.title.message}</p>}\n            </FormControl>\n\n            <FormControl isInvalid={errors.subtitle} minH={'100px'}>\n              <FormLabel>Subtitle</FormLabel>\n              <Input\n                id=\"subtitle\"\n                label=\"Alt Başlık\"\n                name=\"subtitle\"\n                ref={register({\n                  required: {\n                    value: true,\n                    message: 'This field is required.',\n                  },\n                })}\n              />\n              {errors.subtitle && <p className=\"validation__error\">{errors.subtitle.message}</p>}\n            </FormControl>\n\n            <FormControl isInvalid={errors.author} minH={'100px'}>\n              <FormLabel>Author</FormLabel>\n              <Input\n                id=\"author\"\n                label=\"Author\"\n                name=\"author\"\n                ref={register({\n                  required: {\n                    value: true,\n                    message: 'This field is required.',\n                  },\n                })}\n              />\n              {errors.author && <p className=\"validation__error\">{errors.author.message}</p>}\n            </FormControl>\n\n            <FormControl minH={'100px'}>\n              <FormLabel>Category</FormLabel>\n              <Controller\n                as={\n                  <Select placeholder=\"Choose Category\">\n                    {categories.category.post.map((category, i) => (\n                      <option key={i} value={category}>\n                        {category}\n                      </option>\n                    ))}\n                  </Select>\n                }\n                name=\"tag\"\n                control={control}\n                defaultValue={categories.category.post[0]}\n              />\n            </FormControl>\n            <FormControl isInvalid={errors.content} minH={'100px'}>\n              <FormLabel>Content</FormLabel>\n              <Textarea\n                id=\"content\"\n                label=\"İçerik\"\n                name=\"content\"\n                ref={register({\n                  required: {\n                    value: true,\n                    message: 'This field is required.',\n                  },\n                  minLength: {\n                    message: 'Content must contain at least 50 characters or more.',\n                    value: 50,\n                  },\n                })}\n              />\n              {errors.content && <p className=\"validation__error\">{errors.content.message}</p>}\n            </FormControl>\n\n            <FormControl mt={4}>\n              <FileBase64 multiple={false} onDone={({ base64 }) => setFile(base64)} />\n            </FormControl>\n\n            <ModalFooter pr={0}>\n              <Button colorScheme=\"blue\" mr={3} onClick={() => handleSubmit(onSubmit)()}>\n                Save\n              </Button>\n              <Button onClick={onClose}>Cancel</Button>\n            </ModalFooter>\n          </form>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default AddPostForm;\n","import { Flex, Heading, Icon, Link, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nfunction NavHoverBox({ icon, title, description }) {\n  return (\n    <>\n      <Flex\n        pos=\"absolute\"\n        mt=\"calc(100px - 7.5px)\"\n        ml=\"-10px\"\n        width={0}\n        height={0}\n        borderTop=\"10px solid transparent\"\n        borderBottom=\"10px solid transparent\"\n        borderRight=\"10px solid #82AAAD\"\n      />\n      <Flex\n        h={200}\n        w={200}\n        flexDir=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        bgColor=\"#82AAAD\"\n        borderRadius=\"10px\"\n        color=\"#fff\"\n        textAlign=\"center\"\n      >\n        {/* <Icon as={icon} fontSize=\"3xl\" mb={4} />\n            <Heading size=\"md\" fontWeight=\"normal\">{title}</Heading>\n            <Text>{description}</Text> */}\n        {description.map(item => {\n          return (\n            <Link href={'/posts/' + item}>\n              <Text>{item}</Text>\n            </Link>\n          );\n        })}\n      </Flex>\n    </>\n  );\n}\n\nexport default NavHoverBox;\n","import { Flex, Icon, Link, Menu, MenuButton, MenuList, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport NavHoverBox from './NavHoverBox';\n\nfunction NavItem({ navSize, path, title, icon, active, description }) {\n  return (\n    <Flex mt={30} flexDir=\"column\" w=\"100%\" alignItems={navSize == 'small' ? 'center' : 'flex-start'}>\n      <Menu placement=\"right\">\n        {description != null ? (\n          <Link\n            bgColor={active && 'AEC8CA'}\n            p={3}\n            borderRadius={8}\n            _hover={{ textDector: 'none', bgColor: '#AEC8CA' }}\n            w={navSize == 'large' && '100%'}\n          >\n            <MenuButton w=\"100%\">\n              <Flex>\n                <Icon as={icon} mt={1} fontSize=\"xl\" color={active ? '#82AAAD' : 'gray.500:'} />\n                <Text ml={5} fontFamily={'Jua'} fontSize=\"xl\" display={navSize == 'small' ? 'none' : 'flex'}>\n                  {title}\n                </Text>\n              </Flex>\n            </MenuButton>\n          </Link>\n        ) : (\n          <Link\n            bgColor={active && 'AEC8CA'}\n            p={3}\n            borderRadius={8}\n            _hover={{ textDector: 'none', bgColor: '#AEC8CA' }}\n            w={navSize == 'large' && '100%'}\n            href={'/' + path}\n          >\n            <MenuButton w=\"100%\">\n              <Flex>\n                <Icon as={icon} mt={1} fontSize=\"xl\" color={active ? '#82AAAD' : 'gray.500:'} />\n                <Text ml={5} fontFamily={'Jua'} fontSize=\"xl\" display={navSize == 'small' ? 'none' : 'flex'}>\n                  {title}\n                </Text>\n              </Flex>\n            </MenuButton>\n          </Link>\n        )}\n        {description != null ? (\n          <MenuList py={0} border=\"none\" w={200} h={200} ml={5}>\n            <NavHoverBox title={title} icon={icon} description={description} />\n          </MenuList>\n        ) : (\n          <></>\n        )}\n      </Menu>\n    </Flex>\n  );\n}\n\nexport default NavItem;\n","import { Divider, Flex, IconButton } from '@chakra-ui/react'\nimport {FiMenu, FiHome, FiBook, FiChevronsRight, FiSettings} from 'react-icons/fi';\nimport {BiBaseball} from 'react-icons/bi';\nimport React, {useState} from 'react'\nimport NavItem from './NavItem';\nimport { useSelector } from 'react-redux';\n\nfunction Sidebar() {\n    const [navSize, changeNavSize] = useState(\"small\")\n    \n    const categories = useSelector(state => state.category);\n    return (\n        <Flex\n            pos=\"sticky\"\n            h=\"95vh\"\n            boxShadow=\"0 4px 12px 0 rgba(0,0,0,0.05)\"\n            borderRadius={navSize ==\"small\" ? \"15px\" : \"30px\"}\n            w={navSize == \"small\"? \"75px\":\"200px\"}\n            flexDir=\"column\"\n            justifyContent=\"space-between\"\n        >\n            <Flex\n                p=\"5%\"\n                flexDir=\"column\"\n                alignItems={navSize == \"small\" ? \"center\" : \"flex-start\"}\n                as=\"nav\"\n            >\n                <IconButton\n                    bg=\"none\"\n                    mt={5}\n                    _hover={{bg:'none'}}\n                    icon={<FiMenu />}\n                    onClick={() => {\n                        if(navSize == \"small\"){\n                            changeNavSize(\"large\");\n                        }else{\n                            changeNavSize(\"small\");\n                        }\n                    }}\n                ></IconButton>\n                <NavItem navSize={navSize} icon={FiHome} title=\"대시보드\" path=\"dashboard\"/>\n                <NavItem navSize={navSize} icon={FiBook} title=\"전체보기\" path=\"posts\"/>\n                <NavItem navSize={navSize} icon={FiChevronsRight} title=\"카테고리별\" description={categories.category.post}/>\n                <NavItem navSize={navSize} icon={BiBaseball} title=\"야구\" path=\"baseball\" />\n                <NavItem navSize={navSize} icon={FiSettings} title=\"설정\" path=\"setting\"/>\n            </Flex>\n        </Flex>\n    )\n}\n\nexport default Sidebar\n","import React from 'react';\nimport { chakra, useColorModeValue, Flex, Button, Link, Text, Stack, HStack } from '@chakra-ui/react';\nimport Logo from '../images/Logo';\nimport AddPostForm from './AddPostForm';\nimport { useDisclosure } from '@chakra-ui/hooks';\nimport Sidebar from './Sidebar';\n\nconst Header = () => {\n  const bg = useColorModeValue('white', 'gray.800');\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      <chakra.header bg={bg} w=\"full\" px={5} py={1} shadow=\"md\" mx=\"auto\">\n        <Flex align=\"center\" justify=\"space-between\" mx=\"auto\" maxW=\"1420px\">\n          <Flex>\n            <chakra.a href={'/'} title=\"Choc Home Page\" display=\"flex\" alignItems=\"center\">\n              <HStack>\n                <Text fontSize=\"3xl\">\n                  ⚾\n                </Text>\n              <Text \n                m={2} \n                bgGradient=\"linear(to-r, blue.300 0%, blue.200 50%, gray.100 100%)\" \n                bgClip=\"text\" \n                fontWeight={700} \n                fontSize={\"4xl\"}\n                fontFamily={\"Gamja Flower\"}\n              >\n              SCH BLOG\n              </Text>\n              </HStack>\n            </chakra.a>\n          </Flex>\n          <Flex align=\"center\">\n            {/* <Link\n              display=\"block\"\n              color={useColorModeValue('gray.800', 'white')}\n              fontWeight=\"bold\"\n              fontSize=\"lg\"\n              href={'/posts'}\n              px={2}\n              py={1}\n              rounded={'md'}\n              _hover={{\n                textDecoration: 'none',\n                bg: useColorModeValue('gray.200', 'gray.700'),\n              }}\n            >\n              Posts\n            </Link> */}\n            <Button ml=\"10\" colorScheme=\"teal\" size=\"sm\" onClick={onOpen}>\n              New Post\n            </Button>\n          </Flex>\n        </Flex>\n      </chakra.header>\n      <AddPostForm isOpen={isOpen} onClose={onClose} />\n    </>\n  );\n};\n\nexport default Header;\n","import {\n  Box,\n  Heading,\n  Container,\n  Text,\n  Button,\n  Stack,\n  Icon,\n  useColorModeValue,\n  createIcon,\n  Link,\n} from '@chakra-ui/react';\n\nexport default function CallToActionWithAnnotation() {\n  return (\n    <>\n      <Container maxW={'3xl'} minH=\"90vh\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n        <Stack as={Box} textAlign={'center'} spacing={{ base: 8, md: 14 }} py={{ base: 20, md: 36 }}>\n          <Heading fontWeight={600} fontSize={{ base: '2xl', sm: '4xl', md: '6xl' }} lineHeight={'110%'}>\n            MERN stack +  <Text as={'span'} color={'green.400'} bgGradient=\"linear(to-r, #30CFD0 0%, #ce47e7 100%)\" bgClip=\"text\">\n              Chakra UI\n            </Text>\n            <br />BLOG <br />\n            \n          </Heading>\n        </Stack> \n      </Container>\n    </>\n  );\n}\n","import './App.css';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { BrowserRouter as BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport PostsList from './components/PostsList';\nimport PostDetails from './components/PostDetails';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Sidebar from './components/Sidebar';\nimport { Box, Flex } from '@chakra-ui/react';\n\nfunction App() {\n  return (\n    <>\n      <ToastContainer autoClose={3000} />\n      <Flex>\n        <Sidebar />\n        <Box w=\"100%\">\n          <BrowserRouter basename=\"/blog\">\n            <Header />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/dashboard\" component={Home} />\n              <Route exact path=\"/posts\" component={PostsList} />\n              <Route exact path=\"/posts/:category\" component={PostsList} />\n              <Route exact path=\"/posts/:category/:id\" component={PostDetails} />\n              <Redirect to=\"/\" />\n            </Switch>\n          </BrowserRouter>\n        </Box>\n      </Flex>\n    </>\n  );\n}\n\nexport default App;\n","import * as types from '../actions/types';\n\nconst initialState = {\n  posts: [],\n  currentPost: null,\n};\n\nconst postReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.FETCH_POSTS_REQUEST:\n      return {\n        loading: true,\n        posts: [],\n      };\n    case types.FETCH_POSTS_SUCCESS:\n      return {\n        ...state,\n        posts: action.payload,\n        loading: false,\n      };\n    case types.FETCH_POSTS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case types.FETCH_SINGLE_POST_REQUEST:\n      return {\n        loading: true,\n        posts: [],\n      };\n    case types.FETCH_SINGLE_POST_SUCCESS:\n      return {\n        ...state,\n        currentPost: action.payload,\n        loading: false,\n      };\n    case types.FETCH_SINGLE_POST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case types.CREATE_POST_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case types.CREATE_POST_SUCCESS:\n      return {\n        ...state,\n        posts: [...state.posts, action.payload],\n        loading: false,\n      };\n    case types.CREATE_POST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case types.DELETE_POST_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case types.DELETE_POST_SUCCESS:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== action.payload),\n        currentPost: null,\n        loading: false,\n      };\n    case types.DELETE_POST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case types.UPDATE_POST_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case types.UPDATE_POST_SUCCESS:\n      return {\n        ...state,\n        posts: state.posts.map(post => {\n          post._id === action.payload._id ? action.payload : post;\n        }),\n        currentPost: action.payload,\n        loading: false,\n      };\n    case types.UPDATE_POST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport { postReducer };\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { category } from '../reducers/category';\n\nimport { postReducer } from '../reducers/post';\n\nconst rootReducer = combineReducers({\n  posts: postReducer,\n  category: category,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, {}, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","const initialState = {\n  category:[]\n};\n\nconst category = (state = initialState, action) => {\n  return {\n    category:{\n      post:['Frontend', 'Backend',  'React', 'Vue', 'JavaScript', 'ETC'],\n      baseball:['Play','Repair']\n    }\n  }\n};\n\nexport { category };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport { ChakraProvider, extendTheme } from '@chakra-ui/react';\n\nconst colors = {\n  brand: {\n    50: '#ecefff',\n    100: '#cbceeb',\n    200: '#a9aed6',\n    300: '#888ec5',\n    400: '#666db3',\n    500: '#4d5499',\n    600: '#3c4178',\n    700: '#2a2f57',\n    800: '#181c37',\n    900: '#080819',\n  },\n};\n\nconst config = {\n  initialColorMode: 'dark',\n  useSystemColorMode: false,\n};\n\nconst theme = extendTheme({ colors, config });\n\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ChakraProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}